name: 'main'

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  audit:
    runs-on: ${{ fromJSON('["ubuntu-latest", "self-hosted"]')[github.repository == 'github/docs-internal'] }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20.3.x

      - name: Install
        run: yarn install --ignore-engines --silent --ignore-optional

      - name: Run audit
        run: |
          yarn audit
          if [ $? -ge 8 ]; then exit 1; else exit 0 ; fi
  lint-js:
    runs-on: ${{ fromJSON('["ubuntu-latest", "self-hosted"]')[github.repository == 'github/docs-internal'] }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20.3.x

      - name: Install
        run: yarn install --ignore-engines --silent --ignore-optional

      - name: Run js linting
        run: yarn lint:js
  lint-prettier:
    runs-on: ${{ fromJSON('["ubuntu-latest", "self-hosted"]')[github.repository == 'github/docs-internal'] }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20.3.x

      - name: Install
        run: yarn install --ignore-engines --silent --ignore-optional

      - name: Run prettier linting
        run: yarn lint:prettier
  lint-style:
    runs-on: ${{ fromJSON('["ubuntu-latest", "self-hosted"]')[github.repository == 'github/docs-internal'] }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20.3.x

      - name: Install
        run: yarn install --ignore-engines --silent --ignore-optional

      - name: Run style linting
        run: yarn lint:style
  cspell:
    runs-on: ${{ fromJSON('["ubuntu-latest", "self-hosted"]')[github.repository == 'github/docs-internal'] }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20.3.x

      - name: Install
        run: yarn install --ignore-engines --silent --ignore-optional

      - name: Run spellcheck
        run: yarn cspell
  jscpd:
    runs-on: ${{ fromJSON('["ubuntu-latest", "self-hosted"]')[github.repository == 'github/docs-internal'] }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20.3.x

      - name: Install
        run: yarn install --ignore-engines --silent --ignore-optional

      - name: Run copy paste detection
        run: yarn jscpd
  jest:
    runs-on: ${{ fromJSON('["ubuntu-latest", "self-hosted"]')[github.repository == 'github/docs-internal'] }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20.3.x

      - name: Install
        run: yarn install --ignore-engines --silent

      - name: Run jest
        run: yarn test
  jest-coverage:
    runs-on: ${{ fromJSON('["ubuntu-latest", "self-hosted"]')[github.repository == 'github/docs-internal'] }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20.3.x

      - name: Install
        run: yarn install --ignore-engines --silent

      - name: Run jest coverage
        run: yarn test:coverage
  deploy:
    runs-on: ubuntu-latest
    needs: jest

    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
